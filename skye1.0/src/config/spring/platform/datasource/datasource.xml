<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"     
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:tx="http://www.springframework.org/schema/tx"     
       xmlns:context="http://www.springframework.org/schema/context"     
       xmlns:aop="http://www.springframework.org/schema/aop"     
   	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
       <!-- 数据源配置 运行时使用的默认数据源名称为dataSource -->
       <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" id="dataSource">
         <property name="driverClass" value="com.mysql.jdbc.Driver"/>
         <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3307/test"/>
         <property name="user" value="root"/>
         <property name="password" value="root123"/>
         <property name="autoCommitOnClose" value="false"/>
         <property name="checkoutTimeout" value="50000"/>
         <property name="initialPoolSize" value="1"/>
         <property name="minPoolSize" value="1"/>
         <property name="maxPoolSize" value="1"/>
         <property name="maxIdleTime" value="3520"/>
         <property name="acquireIncrement" value="5"/>
       </bean>
       <!-- MyBatis SqlSessionFactory 配置 -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       		<property name="dataSource" ref="dataSource"/>
       		<property name="mapperLocations" value="classpath:config/mybatis/**/*.sqlmap.xml"/>
       		<property name="plugins" ref="paginationInterceptor"/>
       </bean>
       <!-- 分页机制 -->
       <bean id="paginationInterceptor" class="com.skye.core.base.dao.MysqlPaginationInterceptor"/>
       <!-- Hibernate4.3.10.final配置 -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="mappingLocations">
              <list>
                <value>classpath:/config/hibernate/**/*.hbm.xml</value>
              </list>
            </property>
            <property name="hibernateProperties">
              <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
              </props>
            </property>
            <property name="packagesToScan">
              <list>
                <value>com.skye.test.demo.vo</value>
              </list>
            </property>
       </bean>
       <!-- jdbcTemplate配置 -->
       <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <property name="dataSource" ref="dataSource"/>
       </bean>
       <!-- 事物控制管理器 -->
       <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
         <property name="sessionFactory" ref="sessionFactory"/>
         <!-- 调用者能继续在事物内决定回滚还是继续 -->
         <property name="globalRollbackOnParticipationFailure" value="false"/>
       </bean>
       
       <!--  -->
       <aop:aspectj-autoproxy expose-proxy="true"/>
       <!-- spring声明式事物配置，以下为spring的AOP事物管理的增强部分 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
       		<tx:attributes>
       		  <!-- 需要交给spring的aop来进行代理的方法集合 -->
       		  <tx:method name="save*" propagation="REQUIRED"/>
       		  <tx:method name="add*" propagation="REQUIRED"/>
       		  <tx:method name="create*" propagation="REQUIRED"/>
       		  <tx:method name="insert*" propagation="REQUIRED"/>
       		  <tx:method name="ins*" propagation="REQUIRED"/>
       		  <tx:method name="update*" propagation="REQUIRED"/>
       		  <tx:method name="upd*" propagation="REQUIRED"/>
       		  <tx:method name="merge*" propagation="REQUIRED"/>
       		  <tx:method name="delete*" propagation="REQUIRED"/>
       		  <tx:method name="del*" propagation="REQUIRED"/>
       		  <tx:method name="remove*" propagation="REQUIRED"/>
       		  <!-- hibernate4必须配置为开启事物，否则getCurrentSession()获取不到 -->
       		  <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
       		  <tx:method name="count*" propagation="REQUIRED" read-only="true"/>
       		  <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
       		  <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
       		  <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
       		  <tx:method name="*" read-only="true"/>
       		</tx:attributes>
       </tx:advice>
       
       <aop:config expose-proxy="true">
       		<aop:pointcut expression="execution(* com.skye..service..*.*(..))" id="txPointcut"/>
       		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
       </aop:config>
</beans>